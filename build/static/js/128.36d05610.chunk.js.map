{"version":3,"sources":["extensions/i18n/I18n.js","extensions/extensionsHeader.js","../node_modules/reactstrap/es/CardText.js"],"names":["I18nExtension","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","React","createElement","Fragment","ExtensionsHeader","title","subTitle","link","IntlContext","Consumer","context","Row","Col","sm","Card","CardHeader","CardTitle","CardBody","className","Radio","name","onClick","switchLanguage","label","defaultChecked","state","locale","CardText","FormattedMessage","id","Component","data-tour","this","props","href","target","rel","_excluded","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","_extends","defaultProps"],"mappings":"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","file":"static/js/128.36d05610.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  CardText\n} from \"reactstrap\"\nimport ExtensionsHeader from \"../extensionsHeader\"\nimport Radio from \"../../components/@vuexy/radio/RadioVuexy\"\nimport { IntlContext } from \"../../utility/context/Internationalization\"\nimport { FormattedMessage } from \"react-intl\"\nclass I18nExtension extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ExtensionsHeader\n          title=\"React Intl\"\n          subTitle=\"This library provides React components and an API to format dates, numbers, and strings, including pluralization and handling translations.\"\n          link=\"https://www.npmjs.com/package/react-intl\"\n        />\n        <IntlContext.Consumer>\n          {context => {\n            return (\n              <Row>\n                <Col sm=\"12\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Change Locale</CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                      <div className=\"language-options\">\n                        <Radio\n                          name=\"i18n-lang-radio\"\n                          onClick={() => {\n                            context.switchLanguage(\"en\")\n                          }}\n                          label=\"English\"\n                          className=\"mb-1\"\n                          defaultChecked={\n                            context.state.locale === \"en\" ? true : false\n                          }\n                        />\n                        <Radio\n                          name=\"i18n-lang-radio\"\n                          onClick={() => {\n                            context.switchLanguage(\"fr\")\n                          }}\n                          label=\"French\"\n                          className=\"mb-1\"\n                          defaultChecked={\n                            context.state.locale === \"fr\" ? true : false\n                          }\n                        />\n                        <Radio\n                          name=\"i18n-lang-radio\"\n                          onClick={() => {\n                            context.switchLanguage(\"de\")\n                          }}\n                          label=\"German\"\n                          className=\"mb-1\"\n                          defaultChecked={\n                            context.state.locale === \"de\" ? true : false\n                          }\n                        />\n                        <Radio\n                          name=\"i18n-lang-radio\"\n                          onClick={() => {\n                            context.switchLanguage(\"pt\")\n                          }}\n                          label=\"Portuguese\"\n                          className=\"mb-1\"\n                          defaultChecked={\n                            context.state.locale === \"pt\" ? true : false\n                          }\n                        />\n                      </div>\n                      <Card className=\"border mt-3\">\n                        <CardHeader>\n                          <CardTitle>Card Title</CardTitle>\n                        </CardHeader>\n                        <CardBody>\n                          <CardText>\n                            \n                          </CardText>\n                        </CardBody>\n                      </Card>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            )\n          }}\n        </IntlContext.Consumer>\n        <FormattedMessage id=\"Change Log\" />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default I18nExtension\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\n// import { Star } from \"react-feather\"\n\nclass ExtensionsHeader extends React.Component {\n  render() {\n    return (\n      <Row className=\"mb-2\">\n        <Col sm=\"12\" className=\"ml-50\">\n          <p\n            className=\"font-medium-5 mt-1 extension-title\"\n            data-tour=\"extension-title\"\n          >\n            {this.props.title}\n          </p>\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.props.subTitle}\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \n          }\n        </Col>\n      </Row>\n    )\n  }\n}\nexport default ExtensionsHeader\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;"],"sourceRoot":""}