{"version":3,"sources":["views/pages/Flat/FlatUtils.js","views/pages/Flat/CreateFlat.js"],"names":["FlatTable","props","i","j","setIsEdit","setCreateFlat","CreateFlat","setAllBuilding","setBuilding","setAllUnits","setAllFlat","id","Project","setProject","useState","building","setbuilding","useEffect","async","res","axios","get","process","status","data","name","getProjectName","getBuildingName","deleteFlat","willDelete","swal","title","text","icon","dangerMode","delete","Headers","concat","getAllFlat","edit","length","getBuildings","getBuildingDetail","project","all","arguments","undefined","allUnits","availableUnits","getUnits","floor","unit","flat","flat_area","parking","starting_price","extra_facilities","_id","bedRoom","React","createElement","Fragment","Edit","className","color","size","onClick","Trash","allFlat","isEdit","allBuilding","Building","value","handleInputs","e","target","AllProjects","setAllProjects","history","useHistory","getProject","currentFloor","setCurrentFloor","filteredUnits","setFilteredUnits","filter","unit_name","charAt","toString","onChange","map","Name","buildingName","console","log","total_number_of_floors","n","options","push","key","renderOptions","type","required","class","put","setTimeout","go","updateFlat","post","window","alert","uploadFlat","novalidate"],"mappings":"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","file":"static/js/165.448a455d.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Edit, Trash } from 'react-feather';\r\nimport swal from 'sweetalert';\r\n\r\nconst FlatTable = (props) => {\r\n    const {i,j,setIsEdit,setCreateFlat,CreateFlat,setAllBuilding,setBuilding,setAllUnits,setAllFlat,id} = props;\r\n    const [Project, setProject] = useState(null);\r\n    const [building, setbuilding] = useState(null);\r\n    const getProjectName = async()=>{\r\n        const res = await axios.get(process.env.REACT_APP_PORT+'/api/project/single/'+i?.Project);\r\n        if(res.status === 200){\r\n          setProject(res.data.name);\r\n        }else{\r\n          return null;\r\n        }\r\n      }\r\n      const getBuildingName = async()=>{\r\n        const res = await axios.get(process.env.REACT_APP_PORT+'/api/building/single/'+i?.building);\r\n        if(res.status === 200){\r\n          setbuilding(res.data.name);\r\n        }else{\r\n          return null;\r\n        }\r\n      }\r\n      useEffect(() => {\r\n        getProjectName();\r\n        getBuildingName();\r\n      }, [])\r\n      \r\n      const getBuildings = async (id) => {\r\n        if ((id?.length === 24 || id?.length === 12) && id !== \"Select Project\") {\r\n          const res = await axios.get(`${process.env.REACT_APP_PORT}/api/buildings/${id}`, {\r\n            Headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n          );\r\n          setAllBuilding(res.data);\r\n        }\r\n      }\r\n      const getBuildingDetail = async (id) => {\r\n        if ((id?.length === 24 || id?.length === 12)) {\r\n          const res = await axios.get(`${process.env.REACT_APP_PORT}/api/building/${id}`, {\r\n            Headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n          );\r\n          setBuilding(res.data);\r\n        }\r\n      }\r\n      const getUnits = async (id, project,all=false) => {\r\n        if ((id?.length === 24 || id?.length === 12) && (project?.length === 24 || project?.length === 12)) {\r\n          const res = await axios.get(`${process.env.REACT_APP_PORT}/api/find/unit/available/${id}/${project}`, {\r\n            Headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n          );\r\n          !all?\r\n          setAllUnits(res.data.availableUnits):\r\n          setAllUnits(res.data.allUnits);\r\n        }\r\n      }\r\n      const getAllFlat = async()=>{\r\n        const res = await axios.get(`${process.env.REACT_APP_PORT}/api/all/flat`,{\r\n          Headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        if(res.status === 200)\r\n        setAllFlat(res.data);\r\n      }\r\n      const deleteFlat= async(id)=>{\r\n        const willDelete = await swal({\r\n          title: \"Are you sure?\",\r\n            text: \"Are you sure that you want to delete this Block?\",\r\n            icon: \"warning\",\r\n            dangerMode: true,\r\n          });\r\n           \r\n          if (willDelete) {\r\n            const res = await axios.delete(process.env.REACT_APP_PORT + '/api/delete/flat/'+id,{\r\n              Headers: {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            })\r\n            getAllFlat();\r\n          }\r\n          willDelete();\r\n        }\r\n      const edit = async(data)=>{\r\n        setIsEdit(true)\r\n        await getBuildings(data?.Project);\r\n        await getBuildingDetail(data?.building);\r\n        await getUnits(data?.building,data?.Project,true);\r\n        setCreateFlat({...CreateFlat, Project: data?.Project, floor: data?.floor, building: data?.building, unit: data?.unit, flat: data?.flat, flat_area: data?.flat_area, parking: data?.parking, starting_price: data?.starting_price, extra_facilities: data?.extra_facilities,id:data?._id,bedRoom:data?.bedRoom});\r\n       }\r\n  return (\r\n    <tr>\r\n                      <td>{j + 1}</td>\r\n                      <td>{Project!==null?Project:<></>}</td>\r\n                      <td>{building!==null?building:<></>}</td>\r\n                      <td>{i?.flat}</td>\r\n                      <td>{i?.floor}</td>\r\n                      <td>{i?.flat_area}</td>\r\n                      <td>{i?.bedRoom}</td>\r\n                      <td>{i?.starting_price}</td>\r\n                      <td>\r\n                        <Edit className=\"cursor-pointer\" color=\"green\" size={30} onClick={() => { edit(i) }} />\r\n                        <Trash\r\n                          className=\"cursor-pointer\"\r\n                          color=\"red\"\r\n                          size={30}\r\n                          onClick={() => {\r\n                            deleteFlat(id);\r\n                          }}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n  )\r\n}\r\n\r\nexport default FlatTable\r\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport swal from \"sweetalert\";\nimport { Edit, Trash } from \"react-feather\";\nimport FlatTable from \"./FlatUtils\";\n\n\nconst renderOptions = (n) => {\n  const options = [];\n\n  for (let i = 0; i < n; i++) {\n    options.push(\n      <option key={i} value={i}>\n        {i}\n      </option>\n    );\n  }\n\n  return options;\n};\n\nconst renderFlat = (n) => {\n  const options = [];\n\n  for (let i = 1; i <= n; i++) {\n    options.push(\n      <option key={i} value={i}>\n        {i}\n      </option>\n    );\n  }\n\n  return options;\n};\n\nconst CreateFlat = () => {\n  const [allFlat, setAllFlat] = useState(null);\n  const [isEdit, setIsEdit] = useState(false);  \n  const [allUnits, setAllUnits] = useState(null);\n  const [CreateFlat, setCreateFlat] = useState({\n    bedRoom:null,Project: null, floor: null, building: null, unit: null, flat: null, flat_area: null, parking: null, starting_price: null, extra_facilities: null,id:null\n  });\n  const [allBuilding, setAllBuilding] = useState(null);\n  const [Building, setBuilding] = useState(null);\n  let name, value;\n  const handleInputs = (e) => {\n    name = e.target.name;\n    value = e.target.value;\n    setCreateFlat({ ...CreateFlat, [name]: value });\n  }\n  const [AllProjects, setAllProjects] = useState(null);\n  const getProject = async () => {\n    const res = await axios.get(process.env.REACT_APP_PORT + '/api/all/project', {\n      Headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    setAllProjects(res?.data);\n  }\n  var history = useHistory();\n  useEffect(() => {\n    getProject();\n  }, []);\n  const getBuildings = async (id) => {\n    if ((id?.length === 24 || id?.length === 12) && id !== \"Select Project\") {\n      const res = await axios.get(`${process.env.REACT_APP_PORT}/api/buildings/${id}`, {\n        Headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n      );\n      setAllBuilding(res.data);\n    }\n  }\n  const getUnits = async (id, project) => {\n    if ((id?.length === 24 || id?.length === 12) && (project?.length === 24 || project?.length === 12)) {\n      const res = await axios.get(`${process.env.REACT_APP_PORT}/api/find/unit/${id}/${project}`, {\n        Headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n      );\n      setAllUnits(res.data);\n    }\n  }\n  const getBuildingDetail = async (id) => {\n    if ((id?.length === 24 || id?.length === 12)) {\n      const res = await axios.get(`${process.env.REACT_APP_PORT}/api/building/${id}`, {\n        Headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n      );\n      setBuilding(res.data);\n    }\n  }\n\n  const uploadFlat = async () => {\n    const res = await axios.post(process.env.REACT_APP_PORT + '/api/create/flat', {\n      Project: CreateFlat.Project,\n      floor: CreateFlat.floor,\n      building: CreateFlat.building,\n      unit: CreateFlat.unit,\n      flat: CreateFlat.flat,\n      flat_area: CreateFlat.flat_area,\n      parking: CreateFlat.parking,\n      starting_price: CreateFlat.starting_price,\n      extra_facilities: CreateFlat.extra_facilities,\n      bedRoom:CreateFlat.bedRoom\n    })\n    if (res.status === 200) {\n      window.alert(\"Flat Upload Done!\");\n      history.go(0);\n    } else {\n      window.alert(\"Something Error!\");\n    }\n  }\n  const edit = async(data)=>{\n    setCreateFlat({...CreateFlat, Project: data?.Project, floor: data?.floor, building: data?.building, unit: data?.unit, flat: data?.flat, flat_area: data?.flat_area, parking: data?.parking, starting_price: data?.starting_price, extra_facilities: data?.extra_facilities,id:data?._id});\n    setIsEdit(true)\n    await getBuildings(data?.Project);\n    setCreateFlat({...CreateFlat,building:data?.building});\n    await getBuildingDetail(data?.building);\n    setCreateFlat({...CreateFlat,floor: data?.floor, flat: data?.flat});\n    await getUnits(data?.building,data?.Project);\n    setCreateFlat({...CreateFlat,unit: data?.unit});\n    setCreateFlat({...CreateFlat, Project: data?.Project, floor: data?.floor, building: data?.building, unit: data?.unit, flat: data?.flat, flat_area: data?.flat_area, parking: data?.parking, starting_price: data?.starting_price, extra_facilities: data?.extra_facilities,id:data?._id,bedRoom:data?.bedRoom});\n   }\n   const deleteFlat= async(id)=>{\n   const willDelete = await swal({\n     title: \"Are you sure?\",\n       text: \"Are you sure that you want to delete this Block?\",\n       icon: \"warning\",\n       dangerMode: true,\n     });\n      \n     if (willDelete) {\n       const res = await axios.delete(process.env.REACT_APP_PORT + '/api/delete/flat/'+id,{\n         Headers: {\n           'Content-Type': 'application/json'\n         }\n       })\n       getAllFlat();\n     }\n     willDelete();\n   }\n   const updateFlat = async(id)=>{\n     const res = await axios.put(process.env.REACT_APP_PORT + '/api/update/flat/'+id,{\n       Project: CreateFlat.Project,\n       floor: CreateFlat.floor,\n       building: CreateFlat.building,\n       unit: CreateFlat.unit,\n       flat: CreateFlat.flat,\n       flat_area: CreateFlat.flat_area,\n       parking: CreateFlat.parking,\n       starting_price: CreateFlat.starting_price,\n       extra_facilities: CreateFlat.extra_facilities,\n       bedRoom:CreateFlat.bedRoom\n     })\n     if(res.status===200){\n       swal('Building Updated successfully!','success')\n       setTimeout(() => {\n         history.go(0);\n       }, 2000);\n     }\n   }\n   const getAllFlat = async()=>{\n    const res = await axios.get(`${process.env.REACT_APP_PORT}/api/all/flat`,{\n      Headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    if(res.status === 200)\n    setAllFlat(res.data);\n  }\n  useEffect(() => {\n    getAllFlat();\n  }, [])\n  const getProjectName = async(idd)=>{\n    const res = await axios.get(process.env.REACT_APP_PORT+'/api/project/'+idd);\n    if(res.status === 200){\n      return res.data.name;\n    }else{\n      return null;\n    }\n  }\n  const getBuildingName = async(idd)=>{\n    const res = await axios.get(process.env.REACT_APP_PORT+'/api/building/'+idd);\n    if(res.status === 200){\n      return res.data.name;\n    }else{\n      return null;\n    }\n  }\n  const [currentFloor, setCurrentFloor] = useState(0);\n\n  const [filteredUnits, setFilteredUnits] = useState(allUnits?.filter(allUnits =>{\n    const unitFloor = allUnits?.unit_name.charAt(0);\n    return unitFloor === currentFloor.toString();\n  }) || []);\n  return (\n    <>\n      <div className=\"container bg-white p-2 rounded-2\">\n        <form className=\"row px-4 py-4 mx-2 my-2 justify-content-center shadow-lg\">\n          <h3 className=\"text-alternate text-primary\">Create Details</h3>\n          <hr />\n\n          <div className=\"col-md-6 col-12 mb-2\">\n            <p className=\"text-alternate\">Select Project</p>\n            <div className=\"input-group\">\n              <select className=\"form-control\" id=\"project\" onChange={(e) => { handleInputs(e); getBuildings(e.target.value); }} name=\"Project\" value={CreateFlat.Project}>\n                {AllProjects === null ?\n                  <option value={null} name={null}>Loading...</option>\n                  : <option value={null} name={null}>Select Project</option>}\n                {AllProjects !== null && AllProjects?.length === 0 &&\n                  <option value={null} name={null}>No projects Avaliable</option>\n                }\n                {AllProjects !== null && AllProjects?.length > 0 && AllProjects.map((i) => {\n                  return (\n                    <option name={i?._id} value={i?._id}>{i?.Name}</option>\n                  )\n                })\n                }\n              </select>\n            </div>\n          </div>\n          <div className=\"col-md-6 col-12 mb-2\">\n            <p className=\"text-alternate\">Select Building</p>\n            <div className=\"input-group\">\n              <select className=\"form-control\" id=\"building\" name=\"building\" onChange={(e) => { handleInputs(e); getBuildingDetail(e.target.value); getUnits(e.target.value, CreateFlat?.Project); }} value={CreateFlat.building} >\n                {CreateFlat.Project === null ? <option value={null} name={null} >First select Project</option>\n                  : <>\n                    {allBuilding === null && <option value={null} name={null} >Loading...</option>}\n                    {allBuilding !== null && allBuilding?.length === 0 && <option value={null} name={null} >No Building Avaliable</option>}\n                  </>\n                }\n                {allBuilding?.length > 0 &&\n                  <>\n                    <option value={null} name={null} >Select Building</option>\n                    {\n                      allBuilding?.map((i) => {\n                        return (\n                          <>\n                            <option value={i?._id} name={i?._id}>{i?.buildingName}</option>\n                          </>\n                        )\n                      })\n                    }\n                  </>\n                }\n              </select>\n            </div>\n          </div>\n           <div className=\"col-md-6 col-12 mb-2\">\n            <p className=\"text-alternate\">Select Floor</p>\n            <div className=\"input-group\">\n              <select className=\"form-control\" id=\"floor\" name=\"floor\" onChange={(e)=>{handleInputs(e);setCurrentFloor(e.target.value);console.log(filteredUnits);}} value={CreateFlat.floor}>\n                {Building === null ?\n                  <option value={null} name={null}>Loading...</option>\n                  : <option value={null} name={null}>Select Floor</option>}\n                {Building !== null && Building?.total_number_of_floors === 0 &&\n                  <option value={null} name={null}>No Floor Avaliable</option>\n                }\n                {\n                  Building !== null &&\n                  Building?.total_number_of_floors > 0 &&\n                  renderOptions(Building?.total_number_of_floors)\n                }\n              </select>\n            </div>\n          </div>\n          <div className=\"col-md-6 col-12 mb-2\">\n            <p className=\"text-alternate\">Select Unit</p>\n            <div className=\"input-group\">\n              <select className=\"form-control\" id=\"unit\" name=\"unit\" onChange={handleInputs} value={CreateFlat.unit}>\n                {CreateFlat.Project === null && CreateFlat.building === null && <option value={null} name={null}>Select Project</option>}\n                {CreateFlat.building === null && CreateFlat.Project !== null && <option value={null} name={null}>Select Building</option>}\n                {CreateFlat.building !== null && CreateFlat.Project !== null && allUnits === null && <option value={null} name={null}>Loading...</option>}\n                {allUnits !== null &&\n                  <>\n                    {filteredUnits?.length === 0\n                      ? <option value={null} name={null}>No Units Avaliable.</option>\n                      : <option value={null} name={null}>Select Unit</option>\n\n                    }\n                    {filteredUnits?.length > 0 && filteredUnits?.map((i) => {\n                      return (\n                        <option value={i?._id} name={i?._id}>{i?.unit_name}</option>\n                      )\n                    })}\n                  </>\n                }\n              </select>\n            </div>\n          </div>\n          {/* <div className=\"col-md-6 col-12 mb-2\">\n            <p className=\"text-alternate\">Select Flat</p>\n            <div className=\"input-group\">\n              <select className=\"form-control\" id=\"flat\" name=\"flat\" value={CreateFlat.flat} onChange={handleInputs} >\n                {Building === null ?\n                  <option value={null} name={null}>Loading...</option>\n                  : <option value={null} name={null}>Select Flat</option>}\n                {Building !== null && Building?.total_number_of_flats === 0 &&\n                  <option value={null} name={null}>No Flat Avaliable</option>\n                }\n                {\n                  Building !== null &&\n                  Building?.total_number_of_flats > 0 &&\n                  renderFlat(Building?.total_number_of_flats)\n                }\n              </select>\n            </div>\n          </div> */}\n          <div className=\"col-md-4 col-12 mb-2\">\n            <p className=\"text-alternate\">Flat Area</p>\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"flat_area\"\n                name=\"flat_area\"\n                value={CreateFlat.flat_area}\n                onChange={handleInputs}\n                required=\"\"\n              />\n            </div>\n          </div>\n          {/* <div className=\"col-md-6 col-12 mb-2\">\n            <p className=\"text-alternate\">Parking</p>\n            <div className=\"input-group\">\n              <span className=\"input-group-text\">\n                <input\n                  aria-label=\"Parkings\"\n                  id=\"isParkings\"\n                  name=\"isParkings\"\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                />\n              </span>\n              <input\n                type=\"number\"\n                aria-label=\"Parking No\"\n                placeholder=\"Enter Parking No\"\n                className=\"form-control\"\n                id=\"parking\"\n                name=\"parking\"\n                value={CreateFlat.parking}\n                onChange={handleInputs}\n              />\n            </div>\n          </div> */}\n          <div className=\"col-md-4 col-12 mb-2\">\n            <p className=\"text-alternate\">Bed Room</p>\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"bedRoom\"\n                name=\"bedRoom\"\n                value={CreateFlat.bedRoom}\n                onChange={handleInputs}\n                required=\"\"\n              />\n            </div>\n          </div>\n          <div className=\"col-md-4 col-12 mb-2\">\n            <p className=\"text-alternate\">Starting Price</p>\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"price\"\n                name=\"starting_price\"\n                value={CreateFlat.starting_price}\n                onChange={handleInputs}\n                required=\"\"\n              />\n            </div>\n          </div>\n\n          <div className=\"col-md-12 col-12 text-right\">\n          {isEdit ? (\n              <>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-warning btn-md mb-1 mr-1\"\n                  onClick={() => {\n                    setCreateFlat({\n                      ...CreateFlat,\n                      Project: null, floor: null, building: null, unit: null, flat: null, flat_area: null, parking: null, starting_price: null, extra_facilities: null,id:null,bedRoom:null\n                    });\n                    setIsEdit(false);\n                  }}\n                >\n                  {\" \"}\n                  Exit{\" \"}\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-primary btn-md mb-1 mr-1\"\n                  onClick={() => updateFlat(CreateFlat?.id)}\n                >\n                  {\" \"}\n                  Update{\" \"}\n                </button>\n              </>\n            ) : (\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-md mb-1 mr-1\"\n                onClick={() => uploadFlat()}\n              >\n                {\" \"}\n                Create{\" \"}\n              </button>\n            )}\n          </div>\n        </form>\n\n        {!isEdit &&\n          <form\n            className=\"row px-4 py-4 mx-2 my-2 shadow-lg needs-validation\"\n            novalidate\n          >\n            <h3 className=\"text-alternate text-primary\">Unit Details</h3>\n            <div className=\"d-flex justify-content-center\">\n              <table className=\"table table-striped table-responsive\">\n                <tr>\n                  <th>Sno.</th>\n                  <th>Project</th>\n                  <th>Building</th>\n                  <th>Flat</th>\n                  <th>Floor</th>\n                  <th>Flat Area</th>\n                  <th>Bed Room</th>\n                  <th>Starting Price</th>\n                  <th>Action</th>\n                </tr>\n                {allFlat?.map((i, j) => {\n                  let id = i?._id;\n                  console.log(i);\n                  return <FlatTable i={i} j={j} filteredUnits={filteredUnits} setFilteredUnits={setFilteredUnits} setIsEdit={setIsEdit} setCreateFlat={setCreateFlat} CreateFlat={CreateFlat} setAllBuilding={setAllBuilding} setBuilding={setBuilding} setAllUnits={setAllUnits} setAllFlat={setAllFlat} id={id} />;\n                })}\n              </table>\n            </div>\n          </form>\n        }\n      </div>\n    </>\n  );\n};\n\nexport default CreateFlat;\n"],"sourceRoot":""}