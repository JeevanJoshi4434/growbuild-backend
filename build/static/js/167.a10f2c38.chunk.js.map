{"version":3,"sources":["views/pages/Maintanence/Maintanence.jsx"],"names":["Maintanence","_MaintenanceData$","_MaintenanceData2","getInfo","setGetInfo","useState","info","setInfo","allUnits","setAllUnits","CreateFlat","setCreateFlat","price","owner","floor","building","unit","flat","allotmentDate","parking","id","bookingDate","agreementDate","phoneNo","BookingId","addPayment","allBuilding","setAllBuilding","Building","setBuilding","MaintenanceData","setMaintenanceData","name","value","handleInputs","e","target","AllProjects","setAllProjects","useHistory","useEffect","async","res","axios","get","process","Headers","data","getProject","getData","concat","Project","React","createElement","Fragment","ToastContainer","className","onChange","length","getBuildings","map","i","_id","Name","getBuildingDetail","project","getUnits","buildingName","total_number_of_floors","n","options","push","key","renderOptions","s","unit_name","slice","onClick","status","console","log","booking","booking_price","first_applicant_name","allotment_date","booking_date","agreement_date","first_applicant_contactNumber","getDetails","type","aria-label","placeholder","readonly","parseFloat","MaintanenceCharges","MaintenanceCharges","_MaintenanceData","post","paid","total","bookingId","toast","success","position","POSITION","TOP_CENTER","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","index","paymentDate","class"],"mappings":"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","file":"static/js/167.a10f2c38.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst renderOptions = (n) => {\r\n  const options = [];\r\n\r\n  for (let i = 1; i <= n; i++) {\r\n    options.push(\r\n      <option key={i} value={i}>\r\n        {i}\r\n      </option>\r\n    );\r\n  }\r\n\r\n  return options;\r\n};\r\n\r\nconst Maintanence = () => {\r\n  const [getInfo, setGetInfo] = useState(null);\r\n  const [info, setInfo] = useState(false);\r\n  const [allUnits, setAllUnits] = useState(null);\r\n  const [CreateFlat, setCreateFlat] = useState({\r\n    price: null, owner: null, floor: null, building: null, unit: null, flat: null, allotmentDate: null, parking: null, id: null, bookingDate: null, agreementDate: null, phoneNo: null, BookingId: null, addPayment: 0.00\r\n  });\r\n  const [allBuilding, setAllBuilding] = useState(null);\r\n  const [Building, setBuilding] = useState(null);\r\n  const [MaintenanceData, setMaintenanceData] = useState([]);\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n    setCreateFlat({ ...CreateFlat, [name]: value });\r\n  }\r\n  const [AllProjects, setAllProjects] = useState(null);\r\n  const getProject = async () => {\r\n    const res = await axios.get(process.env.REACT_APP_PORT + '/api/all/project', {\r\n      Headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    setAllProjects(res.data);\r\n  }\r\n  var history = useHistory();\r\n  useEffect(() => {\r\n    getProject();\r\n  }, []);\r\n  const getBuildings = async (id) => {\r\n    if ((id?.length === 24 || id?.length === 12) && id !== \"Select Project\") {\r\n      const res = await axios.get(`${process.env.REACT_APP_PORT}/api/buildings/${id}`, {\r\n        Headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n      );\r\n      setAllBuilding(res.data);\r\n    }\r\n  }\r\n  const getUnits = async (id, project) => {\r\n    if ((id?.length === 24 || id?.length === 12) && (project?.length === 24 || project?.length === 12)) {\r\n      const res = await axios.get(`${process.env.REACT_APP_PORT}/api/find/unit/${id}/${project}`, {\r\n        Headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n      );\r\n      setAllUnits(res.data);\r\n    }\r\n  }\r\n  const getBuildingDetail = async (id) => {\r\n    if ((id?.length === 24 || id?.length === 12)) {\r\n      const res = await axios.get(`${process.env.REACT_APP_PORT}/api/building/${id}`, {\r\n        Headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n      );\r\n      setBuilding(res.data);\r\n    }\r\n  }\r\n\r\n  const getDetails = async (building, project, unit) => {\r\n    if ((building.length === 12 || building.length === 24) && (project.length === 12 || project.length === 24) && (unit.length === 12 || unit.length === 24)) {\r\n      const res = await axios.get(`${process.env.REACT_APP_PORT}/api/${building}/${project}/${unit}`, {\r\n        Headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      if (res.status === 201) {\r\n        setInfo(false);\r\n        setCreateFlat({ ...CreateFlat, price: 0, owner: \"No Record Found!\", floor: CreateFlat.floor, building: CreateFlat.building, unit: CreateFlat.unit, allotmentDate: null, parking: 0, id: CreateFlat.id, bookingDate: null, agreementDate: null });\r\n\r\n      }\r\n      else if (res.status === 200) {\r\n        setInfo(true);\r\n        setGetInfo(res.data);\r\n        console.log(res.data);\r\n        let data = res.data;\r\n        setCreateFlat({ ...CreateFlat, price: data?.booking.booking_price, owner: data?.booking.first_applicant_name, floor: CreateFlat.floor, building: CreateFlat.building, unit: CreateFlat.unit, allotmentDate: data?.booking.allotment_date, parking: data?.booking.parking, id: CreateFlat.id, bookingDate: data?.booking.booking_date, agreementDate: data?.booking.agreement_date, phoneNo: data?.booking.first_applicant_contactNumber, BookingId: data?.booking._id })\r\n        await getData();\r\n      }\r\n    }\r\n  }\r\n  const getData = async () => {\r\n    const res = await axios.get(process.env.REACT_APP_PORT + `/api/get/maintenance?projectId=${CreateFlat.Project}&buildingId=${CreateFlat.building}&unitId=${CreateFlat.unit}`)\r\n    setMaintenanceData(res.data);\r\n  }\r\n\r\n  const UpdatePaymentStatus = async () => {\r\n    if (MaintenanceData.length < 0 || CreateFlat.addPayment <= 0.00) {\r\n      return;\r\n    }\r\n    const res = await axios.post(process.env.REACT_APP_PORT + `/api/pay/maintenance`, {\r\n      paid: CreateFlat.addPayment, total: MaintenanceData[MaintenanceData.length - 1]?.MaintenanceCharges, bookingId: CreateFlat.BookingId\r\n    })\r\n    if (res.status === 200) {\r\n      toast.success(\"Payment Added\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      await getData();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <div className=\"container bg-white p-2 rounded-2\">\r\n        <form className=\"row px-4 py-4 mx-2 my-2 justify-content-center shadow-lg\">\r\n          <h3 className=\"text-alternate text-primary\">\r\n            Collect Maintenance Payment\r\n          </h3>\r\n          <hr />\r\n          <div className=\"col-md-6 col-12 mb-2\">\r\n            <p className=\"text-alternate\">Select Project</p>\r\n            <div className=\"input-group\">\r\n              <select className=\"form-control\" id=\"project\" onChange={(e) => { handleInputs(e); getBuildings(e.target.value); }} name=\"Project\" value={CreateFlat.Project}>\r\n                {AllProjects === null ?\r\n                  <option value={null} name={null}>Loading...</option>\r\n                  : <option value={null} name={null}>Select Project</option>}\r\n                {AllProjects !== null && AllProjects?.length === 0 &&\r\n                  <option value={null} name={null}>No projects Avaliable</option>\r\n                }\r\n                {AllProjects !== null && AllProjects?.length > 0 && AllProjects.map((i) => {\r\n                  return (\r\n                    <option name={i?._id} value={i?._id}>{i?.Name}</option>\r\n                  )\r\n                })\r\n                }\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-12 mb-2\">\r\n            <p className=\"text-alternate\">Select Building</p>\r\n            <div className=\"input-group\">\r\n              <select className=\"form-control\" id=\"building\" name=\"building\" onChange={(e) => { handleInputs(e); getBuildingDetail(e.target.value); getUnits(e.target.value, CreateFlat?.Project); }} value={CreateFlat.building} >\r\n                {CreateFlat.Project === null ? <option value={null} name={null} >First select Project</option>\r\n                  : <>\r\n                    {allBuilding === null && <option value={null} name={null} >Loading...</option>}\r\n                    {allBuilding !== null && allBuilding?.length === 0 && <option value={null} name={null} >No Building Avaliable</option>}\r\n                  </>\r\n                }\r\n                {allBuilding?.length > 0 &&\r\n                  <>\r\n                    <option value={null} name={null} >Select Building</option>\r\n                    {\r\n                      allBuilding?.map((i) => {\r\n                        return (\r\n                          <>\r\n                            <option value={i?._id} name={i?._id}>{i?.buildingName}</option>\r\n                          </>\r\n                        )\r\n                      })\r\n                    }\r\n                  </>\r\n                }\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 col-12 mb-2\">\r\n            <p className=\"text-alternate\">Select Floor</p>\r\n            <div className=\"input-group\">\r\n              <select className=\"form-control\" id=\"floor\" name=\"floor\" onChange={(e) => { handleInputs(e); }} value={CreateFlat.floor}>\r\n                {Building === null ?\r\n                  <option value={null} name={null}>Loading...</option>\r\n                  : <option value={null} name={null}>Select Floor</option>}\r\n                {Building !== null && Building?.total_number_of_floors === 0 &&\r\n                  <option value={null} name={null}>No Floor Avaliable</option>\r\n                }\r\n                {\r\n                  Building !== null &&\r\n                  Building?.total_number_of_floors > 0 &&\r\n                  renderOptions(Building?.total_number_of_floors)\r\n                }\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 col-12 mb-2\">\r\n            <p className=\"text-alternate\">Select Unit</p>\r\n            <div className=\"input-group\">\r\n              <select className=\"form-control\" id=\"unit\" name=\"unit\" onChange={(e) => { handleInputs(e); }} value={CreateFlat.unit}>\r\n                {CreateFlat.Project === null && CreateFlat.building === null && <option value={null} name={null}>Select Project</option>}\r\n                {CreateFlat.building === null && CreateFlat.Project !== null && <option value={null} name={null}>Select Building</option>}\r\n                {CreateFlat.building !== null && CreateFlat.Project !== null && allUnits === null && <option value={null} name={null}>Loading...</option>}\r\n                {allUnits !== null &&\r\n                  <>\r\n                    {allUnits.length === 0\r\n                      ? <option value={null} name={null}>No Units Avaliable.</option>\r\n                      : <option value={null} name={null}>Select Unit</option>\r\n\r\n                    }\r\n                    {allUnits.length > 0 && allUnits.map((i) => {\r\n                      let s = \"\";\r\n                      s = i.unit_name;\r\n                      s = s.slice(0, 1);\r\n                      if (s === CreateFlat.floor) {\r\n                        return (\r\n                          <option value={i?._id} name={i?._id}>\r\n                            {i?.unit_name}\r\n                          </option>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </>\r\n                }\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 col-12 mb-2\">\r\n            <p className=\"text-alternate\">Fetch Data</p>\r\n            <button onClick={() => getDetails(CreateFlat.building, CreateFlat.Project, CreateFlat.unit)} type=\"button\" className=\"btn btn-primary \">\r\n              View Details\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md-6 col-12 mb-2\">\r\n            <p className=\"text-alternate\">Owner Name</p>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                aria-label=\"ownerName\"\r\n                placeholder=\"Select Flat first\"\r\n                readonly\r\n                value={CreateFlat?.owner}\r\n                name=\"owner\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-12 mb-2\">\r\n            <p className=\"text-alternate\">Owner Phone No</p>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                aria-label=\"ownerPhone\"\r\n                placeholder=\"Select Flat first\"\r\n                readonly\r\n                name=\"phone\"\r\n                className=\"form-control\"\r\n                value={CreateFlat?.phoneNo}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 col-12 mb-2\">\r\n            <p className=\"text-alternate\">Total Maintenance Amount</p>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                aria-label=\"MaintenanceAmount\"\r\n                placeholder=\"Select Flat first\"\r\n                readonly\r\n                name=\"MaintenanceAmount\"\r\n                className=\"form-control\"\r\n                value={MaintenanceData.length > 0 ? parseFloat(MaintenanceData[0]?.MaintanenceCharges) : 0.00}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 col-12 mb-2\">\r\n            <p className=\"text-alternate\">Payment Due</p>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"number\"\r\n                aria-label=\"due\"\r\n                placeholder=\"Select Flat first\"\r\n                readonly\r\n                name=\"due\"\r\n                className=\"form-control\"\r\n                value={MaintenanceData.length > 0 ? parseFloat(MaintenanceData[MaintenanceData.length - 1]?.MaintenanceCharges) : 0.00}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 col-12 mb-2\">\r\n            <p className=\"text-alternate\">Add Payment</p>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"number\"\r\n                aria-label=\"addPayment\"\r\n                placeholder=\"Select Flat first\"\r\n                readonly\r\n                name=\"addPayment\"\r\n                className=\"form-control\"\r\n                value={CreateFlat?.addPayment}\r\n                onChange={handleInputs}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 col-12 mb-2\">\r\n            <p className=\"text-alternate\">Add Payment</p>\r\n            <button onClick={UpdatePaymentStatus} type=\"button\" className=\"btn btn-primary \">\r\n              Add Payment\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"table-responsive bg-white py-4 px-3 my-2 justify-content-center shadow-lg\">\r\n              <table\r\n                id=\"maintanence\"\r\n                className=\"table table-striped table-bordered\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>Sr. No.</th>\r\n                    <th>Total Amount</th>\r\n                    <th>Paid Amount</th>\r\n                    <th>Payment Date</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {MaintenanceData.length > 0 && MaintenanceData.map((data, index) => (\r\n                    <tr>\r\n                      <td>{index + 1}</td>\r\n                      <td>{data?.MaintenanceCharges}</td>\r\n                      <td>{data?.paid}</td>\r\n                      <td>{data?.paymentDate}</td>\r\n                      <td>\r\n                        <button type=\"button\" class=\"btn btn-primary\">\r\n                          Print\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                  <tr>\r\n                    <td>Loading...</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Maintanence;\r\n"],"sourceRoot":""}