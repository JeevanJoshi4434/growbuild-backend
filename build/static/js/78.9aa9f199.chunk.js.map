{"version":3,"sources":["components/reactstrap/collapse/CollapseSourceCode.js","components/reactstrap/collapse/CollapseDefault.js","components/reactstrap/collapse/CollapseUncontrolled.js","components/reactstrap/collapse/Accordion.js","components/reactstrap/collapse/AccordionShadow.js","components/reactstrap/collapse/AccordionBorder.js","components/reactstrap/collapse/AccordionMargin.js","components/reactstrap/collapse/AccordionHover.js","components/reactstrap/collapse/Collapse.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/Collapse.js","../node_modules/reactstrap/es/UncontrolledCollapse.js"],"names":["accordion","React","createElement","className","accordionShadow","accordionBorder","accordionMargin","accordionHover","collapseUncontrolled","collapseDefault","collapseItems","id","title","content","CollapseDefault","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","activeTab","status","toggleTab","tab","setState","toggleCollapse","collapseID","index","indexOf","items","splice","push","onEntered","includes","onEntering","onExited","onExiting","_createClass","key","value","_this2","renderCollapse","map","collapseItem","Card","onClick","classnames","closing","opening","CardHeader","CardTitle","ChevronDown","size","Collapse","isOpen","CardBody","Fragment","Nav","tabs","NavItem","NavLink","active","this","Eye","Code","TabContent","TabPane","tabId","Component","CollapseUncontrolled","UncontrolledCollapse","toggler","Accordion","prevState","accordionItems","AccordionShadow","accordionShadowItems","open","AccordionBorder","accordionBorderItems","AccordionMargin","accordionMarginItems","AccordionHover","accordionHoverItems","onMouseEnter","Collaspe","Prism","highlightAll","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","xl","lg","TabContext","createContext","t","n","util","clone","languages","javascript","e","a","replace","RegExp","source","jsx","extend","tag","pattern","inside","comment","insertBefore","spread","script","alias","rest","s","join","g","o","i","type","tagName","pop","openedBraces","r","Token","hooks","add","language","tokens","propTypes","tagPropType","PropTypes","any","string","cssModule","object","_Component","props","_inheritsLoose","getDerivedStateFromProps","nextProps","prototype","render","_this$props","Tag","attributes","omit","Object","keys","classes","mapToCssModules","classNames","Provider","activeTabId","_extends","defaultProps","_excluded","_objectWithoutPropertiesLoose","getClasses","Consumer","_ref","bool","pills","vertical","oneOfType","horizontal","justified","fill","navbar","card","getVerticalClass","_transitionStatusToCl","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","_objectSpread","target","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","Transition","children","arrayOf","node","innerRef","func","appear","enter","exit","timeout","TransitionTimeouts","transitionStatusToClassHash","TransitionStatuses","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","height","name","bind","_assertThisInitialized","_proto","isAppearing","onExit","offsetHeight","otherProps","transitionProps","pick","TransitionPropTypeKeys","childProps","in","collapseClass","getTransitionClass","style","ref","omitKeys","defaultOpen","isRequired","toggleEvents","defaultToggleEvents","togglers","removeEventListeners","toggle","componentDidMount","findDOMElements","addMultipleEventListeners","componentWillUnmount","preventDefault"],"mappings":"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","file":"static/js/78.9aa9f199.chunk.js","sourcesContent":["import React from \"react\"\n\nexport const accordion = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Collapse} from \"reactstrap\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass Accordion extends React.Component {\n\n  state = { collapseID: \"\"}\n\n  toggleCollapse = collapseID => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n      }))\n    }\n\n\n  render() {\n\n      const accordionItems = collapseItems.map(collapseItem => {\n          return (\n            <Card\n              key={collapseItem.id}\n              onClick={() => this.toggleCollapse(collapseItem.id)}\n            >\n              <CardHeader>\n                <CardTitle className=\"lead collapse-title collapsed\">\n                  {collapseItem.title}\n                </CardTitle>\n              </CardHeader>\n              <Collapse\n                isOpen={collapseItem.id === this.state.collapseID}\n                onEntering={this.onEntering}\n                onEntered={this.onEntered}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <CardBody>{collapseItem.content}</CardBody>\n              </Collapse>\n            </Card>\n          )\n        })\n\n    return(\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate\">\n      {accordionItems}\n    </div>\n    )\n  }\n}\nexport default Accordion`}\n    </code>\n  </pre>\n)\n\nexport const accordionShadow = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Collapse} from \"reactstrap\"\nimport classnames from \"classnames\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionShadow extends React.Component {\n\n  state = { collapseID: \"\"}\n\n  toggleCollapse = collapseID => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n      }))\n    }\n\n\n  render() {\n\n      const accordionShadowItems = collapseItems.map(collapseItem => {\n          return (\n            <Card\n              className={classnames({\n                open: collapseItem.id === this.state.collapseID\n              })}\n              key={collapseItem.id}\n              onClick={() => this.toggleCollapse(collapseItem.id)}\n            >\n              <CardHeader>\n                <CardTitle className=\"lead collapse-title collapsed\">\n                  {collapseItem.title}\n                </CardTitle>\n              </CardHeader>\n              <Collapse\n                isOpen={collapseItem.id === this.state.collapseID}\n                onEntering={this.onEntering}\n                onEntered={this.onEntered}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <CardBody>{collapseItem.content}</CardBody>\n              </Collapse>\n            </Card>\n          )\n        })\n\n    return(\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate accordion-shadow\">\n      {accordionShadowItems}\n    </div>\n    )\n  }\n}\nexport default AccordionShadow`}\n    </code>\n  </pre>\n)\n\nexport const accordionBorder = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Collapse} from \"reactstrap\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionBorder extends React.Component {\n\n  state = { collapseID: \"\"}\n\n  toggleCollapse = collapseID => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n      }))\n    }\n\n\n  render() {\n\n      const accordionBorderItems = collapseItems.map(collapseItem => {\n          return (\n            <Card\n              className=\"collapse-border-item\"\n              key={collapseItem.id}\n              onClick={() => this.toggleCollapse(collapseItem.id)}\n            >\n              <CardHeader>\n                <CardTitle className=\"lead collapse-title collapsed\">\n                  {collapseItem.title}\n                </CardTitle>\n              </CardHeader>\n              <Collapse\n                isOpen={collapseItem.id === this.state.collapseID}\n                onEntering={this.onEntering}\n                onEntered={this.onEntered}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <CardBody>{collapseItem.content}</CardBody>\n              </Collapse>\n            </Card>\n          )\n        })\n\n    return(\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate collapse-border\">\n      {accordionBorderItems}\n    </div>\n    )\n  }\n}\nexport default AccordionBorder`}\n    </code>\n  </pre>\n)\n\nexport const accordionMargin = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Collapse} from \"reactstrap\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionMargin extends React.Component {\n\n  state = { collapseID: \"\"}\n\n  toggleCollapse = collapseID => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n      }))\n    }\n\n\n  render() {\n\n      const accordionMarginItems = collapseItems.map(collapseItem => {\n          return (\n            <Card\n              key={collapseItem.id}\n              onClick={() => this.toggleCollapse(collapseItem.id)}\n            >\n              <CardHeader>\n                <CardTitle className=\"lead collapse-title collapsed\">\n                  {collapseItem.title}\n                </CardTitle>\n              </CardHeader>\n              <Collapse\n                isOpen={collapseItem.id === this.state.collapseID}\n                onEntering={this.onEntering}\n                onEntered={this.onEntered}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <CardBody>{collapseItem.content}</CardBody>\n              </Collapse>\n            </Card>\n          )\n        })\n\n    return(\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\n      {accordionMarginItems}\n    </div>\n    )\n  }\n}\nexport default AccordionMargin`}\n    </code>\n  </pre>\n)\n\nexport const accordionHover = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Collapse} from \"reactstrap\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionHover extends React.Component {\n\n  state = { collapseID: \"\"}\n\n  toggleCollapse = collapseID => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n      }))\n    }\n\n\n  render() {\n\n      const accordionHoverItems = collapseItems.map(collapseItem => {\n          return (\n            <Card\n              key={collapseItem.id}\n              onClick={() => this.toggleCollapse(collapseItem.id)}\n            >\n              <CardHeader>\n                <CardTitle className=\"lead collapse-title collapsed\">\n                  {collapseItem.title}\n                </CardTitle>\n              </CardHeader>\n              <Collapse\n                isOpen={collapseItem.id === this.state.collapseID}\n                onEntering={this.onEntering}\n                onEntered={this.onEntered}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <CardBody>{collapseItem.content}</CardBody>\n              </Collapse>\n            </Card>\n          )\n        })\n\n    return(\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\n      {accordionHoverItems}\n    </div>\n    )\n  }\n}\nexport default AccordionHover\n  `}\n    </code>\n  </pre>\n)\n\nexport const collapseUncontrolled = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {UncontrolledCollaspe} from \"reactstrap\"\n\nclass CollapseUncontrolled extends React.Component {\n\n  render() {\n    return(\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\n        <Card>\n          <CardHeader id=\"item-1\">\n            <CardTitle className=\"lead collapse-title collapsed\">\n              Collapse Item 1\n            </CardTitle>\n          </CardHeader>\n          <UncontrolledCollapse toggler=\"#item-1\">\n            <CardBody>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\n            </CardBody>\n          </UncontrolledCollapse>\n        </Card>\n        <Card>\n          <CardHeader id=\"item-2\">\n            <CardTitle className=\"lead collapse-title collapsed\">\n              Collapse Item 2\n            </CardTitle>\n          </CardHeader>\n          <UncontrolledCollapse toggler=\"#item-2\">\n            <CardBody>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\n            </CardBody>\n          </UncontrolledCollapse>\n        </Card>\n        <Card>\n          <CardHeader id=\"item-3\">\n            <CardTitle className=\"lead collapse-title collapsed\">\n              Collapse Item 3\n            </CardTitle>\n          </CardHeader>\n          <UncontrolledCollapse toggler=\"#item-3\">\n            <CardBody>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\n            </CardBody>\n          </UncontrolledCollapse>\n        </Card>\n        <Card>\n          <CardHeader id=\"item-4\">\n            <CardTitle className=\"lead collapse-title collapsed\">\n              Collapse Item 4\n            </CardTitle>\n          </CardHeader>\n          <UncontrolledCollapse toggler=\"#item-4\">\n            <CardBody>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\n            </CardBody>\n          </UncontrolledCollapse>\n        </Card>\n    </div>\n    )\n  }\n}\nexport default CollapseUncontrolled\n  `}\n    </code>\n  </pre>\n)\n\nexport const collapseDefault = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Collaspe} from \"reactstrap\"\n\nconst collapseItems = [\n  {\n    id: 0,\n    title: \"Collapse Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 1,\n    title: \"Collapse Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 2,\n    title: \"Collapse Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 3,\n    title: \"Collapse Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass CollapseDefault extends React.Component {\n\n  state = {\n    collapseItems: []\n  }\n\n  toggleCollapse = collapseID => {\n    let index = this.state.collapseItems.indexOf(collapseID)\n    if (index >= 0) {\n      let items = this.state.collapseItems\n      items.splice(index, index + 1)\n      this.setState({ collapseItems: items })\n    } else {\n      let items = this.state.collapseItems\n      items.push(collapseID)\n      this.setState({ collapseItems: items })\n    }\n  }\n\n  render() {\n\n    const renderCollapse = collapseItems.map(collapseItem => {\n      return (\n        <Card\n          key={collapseItem.id}\n          onClick={() => this.toggleCollapse(collapseItem.id)}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n          </CardHeader>\n          <Collapse\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\n            onEntering={this.onEntering}\n            onEntered={this.onEntered}\n            onExiting={this.onExiting}\n            onExited={this.onExited}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n\n    return(\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\n        {renderCollapse}\n      </div>\n    )\n  }\n}\nexport default CollapseDefault\n  `}\n    </code>\n  </pre>\n)\n","import React from \"react\"\nimport {\n  Collapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { collapseDefault } from \"./CollapseSourceCode\"\nconst collapseItems = [\n  {\n    id: 0,\n    title: \"Collapse Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 1,\n    title: \"Collapse Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 2,\n    title: \"Collapse Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 3,\n    title: \"Collapse Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass CollapseDefault extends React.Component {\n  state = {\n    activeTab: \"1\",\n    collapseItems: [],\n    status: \"Closed\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleCollapse = collapseID => {\n    let index = this.state.collapseItems.indexOf(collapseID)\n    if (index >= 0) {\n      let items = this.state.collapseItems\n      items.splice(index, index + 1)\n      this.setState({ collapseItems: items })\n    } else {\n      let items = this.state.collapseItems\n      items.push(collapseID)\n      this.setState({ collapseItems: items })\n    }\n  }\n\n  onEntered = id => {\n    if (this.state.collapseItems.includes(id))\n      this.setState({ status: \"Opened\" })\n  }\n  onEntering = id => {\n    if (this.state.collapseItems.includes(id))\n      this.setState({ status: \"Opening...\" })\n  }\n\n  onExited = id => {\n    if (this.state.collapseItems.includes(id))\n      this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = id => {\n    if (this.state.collapseItems.includes(id))\n      this.setState({ status: \"Closing...\" })\n  }\n\n  render() {\n    const renderCollapse = collapseItems.map(collapseItem => {\n      return (\n        <Card\n          key={collapseItem.id}\n          onClick={() => this.toggleCollapse(collapseItem.id)}\n          className={classnames({\n            \"collapse-collapsed\":\n              this.state.status === \"Closed\" &&\n              this.state.collapseItems.includes(collapseItem.id),\n            \"collapse-shown\":\n              this.state.status === \"Opened\" &&\n              this.state.collapseItems.includes(collapseItem.id),\n            closing:\n              this.state.status === \"Closing...\" &&\n              this.state.collapseItems.includes(collapseItem.id),\n            opening:\n              this.state.status === \"Opening...\" &&\n              this.state.collapseItems.includes(collapseItem.id)\n          })}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n            <ChevronDown size={15} className=\"collapse-icon\" />\n          </CardHeader>\n          <Collapse\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\n            onEntering={() => this.onEntering(collapseItem.id)}\n            onEntered={() => this.onEntered(collapseItem.id)}\n            onExiting={() => this.onExiting(collapseItem.id)}\n            onExited={() => this.onExited(collapseItem.id)}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Accordion</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              With basic collapse you can open multiple items at a time. to add\n              bottom border use <code> .collapse-bordered</code> as a wrapper of\n              collapse cards.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse collapse-bordered\">\n                  {renderCollapse}\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {collapseDefault}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default CollapseDefault\n","import React from \"react\"\nimport {\n  UncontrolledCollapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { collapseUncontrolled } from \"./CollapseSourceCode\"\n\nclass CollapseUncontrolled extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Collapse Uncontrolled</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              With uncontrolled collapse you don't have to manage state you can\n              toggle collapse with <code>id</code> and <code>toggler</code>\n              attribute\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse collapse-bordered\">\n                  <Card>\n                    <CardHeader id=\"item-1\">\n                      <CardTitle className=\"lead collapse-title collapsed\">\n                        Collapse Item 1\n                      </CardTitle>\n                      <ChevronDown size={15} className=\"collapse-icon\" />\n                    </CardHeader>\n                    <UncontrolledCollapse toggler=\"#item-1\">\n                      <CardBody>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\n                      </CardBody>\n                    </UncontrolledCollapse>\n                  </Card>\n                  <Card>\n                    <CardHeader id=\"item-2\">\n                      <CardTitle className=\"lead collapse-title collapsed\">\n                        Collapse Item 2\n                      </CardTitle>\n                      <ChevronDown size={15} className=\"collapse-icon\" />\n                    </CardHeader>\n                    <UncontrolledCollapse toggler=\"#item-2\">\n                      <CardBody>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\n                      </CardBody>\n                    </UncontrolledCollapse>\n                  </Card>\n                  <Card>\n                    <CardHeader id=\"item-3\">\n                      <CardTitle className=\"lead collapse-title collapsed\">\n                        Collapse Item 3\n                      </CardTitle>\n                      <ChevronDown size={15} className=\"collapse-icon\" />\n                    </CardHeader>\n                    <UncontrolledCollapse toggler=\"#item-3\">\n                      <CardBody>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\n                      </CardBody>\n                    </UncontrolledCollapse>\n                  </Card>\n                  <Card>\n                    <CardHeader id=\"item-4\">\n                      <CardTitle className=\"lead collapse-title collapsed\">\n                        Collapse Item 4\n                      </CardTitle>\n                      <ChevronDown size={15} className=\"collapse-icon\" />\n                    </CardHeader>\n                    <UncontrolledCollapse toggler=\"#item-4\">\n                      <CardBody>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\n                      </CardBody>\n                    </UncontrolledCollapse>\n                  </Card>\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {collapseUncontrolled}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default CollapseUncontrolled\n","import React from \"react\"\nimport {\n  Collapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { accordion } from \"./CollapseSourceCode\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass Accordion extends React.Component {\n  state = {\n    activeTab: \"1\",\n    collapseID: \"\",\n    status: \"Closed\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleCollapse = collapseID => {\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }))\n  }\n  onEntered = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\n  }\n  onEntering = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\n  }\n\n  onExited = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\n  }\n\n  render() {\n    const accordionItems = collapseItems.map(collapseItem => {\n      return (\n        <Card\n          key={collapseItem.id}\n          onClick={() => this.toggleCollapse(collapseItem.id)}\n          className={classnames({\n            \"collapse-collapsed\":\n              this.state.status === \"Closed\" &&\n              this.state.collapseID === collapseItem.id,\n            \"collapse-shown\":\n              this.state.status === \"Opened\" &&\n              this.state.collapseID === collapseItem.id,\n            closing:\n              this.state.status === \"Closing...\" &&\n              this.state.collapseID === collapseItem.id,\n            opening:\n              this.state.status === \"Opening...\" &&\n              this.state.collapseID === collapseItem.id\n          })}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n            <ChevronDown size={15} className=\"collapse-icon\" />\n          </CardHeader>\n          <Collapse\n            isOpen={collapseItem.id === this.state.collapseID}\n            onEntering={() => this.onEntering(collapseItem.id)}\n            onEntered={() => this.onEntered(collapseItem.id)}\n            onExiting={() => this.onExiting(collapseItem.id)}\n            onExited={() => this.onExited(collapseItem.id)}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Accordion</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              You may want to open one item at a time for that you can use\n              accordion.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse collapse-bordered\">\n                  {accordionItems}\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {accordion}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default Accordion\n","import React from \"react\"\nimport {\n  Collapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { accordionShadow } from \"./CollapseSourceCode\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionShadow extends React.Component {\n  state = {\n    activeTab: \"1\",\n    collapseID: \"\",\n    status: \"Closed\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleCollapse = collapseID => {\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }))\n  }\n\n  onEntered = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\n  }\n  onEntering = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\n  }\n\n  onExited = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\n  }\n\n  render() {\n    const accordionShadowItems = collapseItems.map(collapseItem => {\n      return (\n        <Card\n          key={collapseItem.id}\n          onClick={() => this.toggleCollapse(collapseItem.id)}\n          className={classnames({\n            \"collapse-collapsed\":\n              this.state.status === \"Closed\" &&\n              this.state.collapseID === collapseItem.id,\n            \"collapse-shown\":\n              this.state.status === \"Opened\" &&\n              this.state.collapseID === collapseItem.id,\n            closing:\n              this.state.status === \"Closing...\" &&\n              this.state.collapseID === collapseItem.id,\n            opening:\n              this.state.status === \"Opening...\" &&\n              this.state.collapseID === collapseItem.id,\n            open: collapseItem.id === this.state.collapseID\n          })}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n            <ChevronDown size={15} className=\"collapse-icon\" />\n          </CardHeader>\n          <Collapse\n            isOpen={collapseItem.id === this.state.collapseID}\n            onEntering={() => this.onEntering(collapseItem.id)}\n            onEntered={() => this.onEntered(collapseItem.id)}\n            onExiting={() => this.onExiting(collapseItem.id)}\n            onExited={() => this.onExited(collapseItem.id)}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Accordion Shadow</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              use class <code>.accordion-shadow</code> as a wrapper of your\n              accordion/collapse card for shadow.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse collapse-bordered accordion-shadow\">\n                  {accordionShadowItems}\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {accordionShadow}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AccordionShadow\n","import React from \"react\"\nimport {\n  Collapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { accordionBorder } from \"./CollapseSourceCode\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionBorder extends React.Component {\n  state = {\n    activeTab: \"1\",\n    collapseID: \"\",\n    status: \"Closed\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleCollapse = collapseID => {\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }))\n  }\n\n  onEntered = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\n  }\n  onEntering = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\n  }\n\n  onExited = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\n  }\n\n  render() {\n    const accordionBorderItems = collapseItems.map(collapseItem => {\n      return (\n        <Card\n          key={collapseItem.id}\n          onClick={() => this.toggleCollapse(collapseItem.id)}\n          className={classnames(\"collapse-border-item\", {\n            \"collapse-collapsed\":\n              this.state.status === \"Closed\" &&\n              this.state.collapseID === collapseItem.id,\n            \"collapse-shown\":\n              this.state.status === \"Opened\" &&\n              this.state.collapseID === collapseItem.id,\n            closing:\n              this.state.status === \"Closing...\" &&\n              this.state.collapseID === collapseItem.id,\n            opening:\n              this.state.status === \"Opening...\" &&\n              this.state.collapseID === collapseItem.id\n          })}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n            <ChevronDown size={15} className=\"collapse-icon\" />\n          </CardHeader>\n          <Collapse\n            isOpen={collapseItem.id === this.state.collapseID}\n            onEntering={() => this.onEntering(collapseItem.id)}\n            onEntered={() => this.onEntered(collapseItem.id)}\n            onExiting={() => this.onExiting(collapseItem.id)}\n            onExited={() => this.onExited(collapseItem.id)}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Accordion Border</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use class <code>.collapse-border-item</code> with your collapsible\n              card.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse\">{accordionBorderItems}</div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {accordionBorder}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AccordionBorder\n","import React from \"react\"\nimport {\n  Collapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { accordionMargin } from \"./CollapseSourceCode\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionMargin extends React.Component {\n  state = {\n    activeTab: \"1\",\n    collapseID: \"\",\n    status: \"Closed\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleCollapse = collapseID => {\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }))\n  }\n\n  onEntered = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\n  }\n  onEntering = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\n  }\n\n  onExited = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\n  }\n\n  render() {\n    const accordionMarginItems = collapseItems.map(collapseItem => {\n      return (\n        <div className=\"collapse-margin\" key={collapseItem.id}>\n          <Card\n            onClick={() => this.toggleCollapse(collapseItem.id)}\n            className={classnames({\n              \"collapse-collapsed\":\n                this.state.status === \"Closed\" &&\n                this.state.collapseID === collapseItem.id,\n              \"collapse-shown\":\n                this.state.status === \"Opened\" &&\n                this.state.collapseID === collapseItem.id,\n              closing:\n                this.state.status === \"Closing...\" &&\n                this.state.collapseID === collapseItem.id,\n              opening:\n                this.state.status === \"Opening...\" &&\n                this.state.collapseID === collapseItem.id\n            })}\n          >\n            <CardHeader>\n              <CardTitle className=\"lead collapse-title collapsed\">\n                {collapseItem.title}\n              </CardTitle>\n              <ChevronDown size={15} className=\"collapse-icon\" />\n            </CardHeader>\n            <Collapse\n              isOpen={collapseItem.id === this.state.collapseID}\n              onEntering={() => this.onEntering(collapseItem.id)}\n              onEntered={() => this.onEntered(collapseItem.id)}\n              onExiting={() => this.onExiting(collapseItem.id)}\n              onExited={() => this.onExited(collapseItem.id)}\n            >\n              <CardBody>{collapseItem.content}</CardBody>\n            </Collapse>\n          </Card>\n        </div>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Accordion Margin</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use class <code>.collapse-Margin</code> as a wrapper of your\n              collapseible card.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse\">{accordionMarginItems}</div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {accordionMargin}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AccordionMargin\n","import React from \"react\"\nimport {\n  Collapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { accordionHover } from \"./CollapseSourceCode\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionHover extends React.Component {\n  state = {\n    activeTab: \"1\",\n    collapseID: \"\",\n    status: \"Closed\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleCollapse = collapseID => {\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }))\n  }\n\n  onEntered = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\n  }\n  onEntering = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\n  }\n\n  onExited = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\n  }\n\n  render() {\n    const accordionHoverItems = collapseItems.map(collapseItem => {\n      return (\n        <Card\n          onMouseEnter={() => this.toggleCollapse(collapseItem.id)}\n          key={collapseItem.id}\n          className={classnames({\n            \"collapse-collapsed\":\n              this.state.status === \"Closed\" &&\n              this.state.collapseID === collapseItem.id,\n            \"collapse-shown\":\n              this.state.status === \"Opened\" &&\n              this.state.collapseID === collapseItem.id,\n            closing:\n              this.state.status === \"Closing...\" &&\n              this.state.collapseID === collapseItem.id,\n            opening:\n              this.state.status === \"Opening...\" &&\n              this.state.collapseID === collapseItem.id\n          })}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n            <ChevronDown size={15} className=\"collapse-icon\" />\n          </CardHeader>\n          <Collapse\n            isOpen={collapseItem.id === this.state.collapseID}\n            onEntering={() => this.onEntering(collapseItem.id)}\n            onEntered={() => this.onEntered(collapseItem.id)}\n            onExiting={() => this.onExiting(collapseItem.id)}\n            onExited={() => this.onExited(collapseItem.id)}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Accordion Hover</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              To create a hover accordion call <code>.toggleCollapse</code> on{\" \"}\n              <code>mouseEnter</code> instead of <code>onClick</code>\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse collapse-bordered\">\n                  {accordionHoverItems}\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {accordionHover}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AccordionHover\n","import React from \"react\"\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\nimport CollapseDefault from \"./CollapseDefault\"\nimport CollapseUncontrolled from \"./CollapseUncontrolled\"\nimport Accordion from \"./Accordion\"\nimport AccordionShadow from \"./AccordionShadow\"\nimport AccordionBorder from \"./AccordionBorder\"\nimport AccordionMargin from \"./AccordionMargin\"\nimport AccordionHover from \"./AccordionHover\"\nimport { Row, Col } from \"reactstrap\"\nimport Prism from \"prismjs\"\nimport \"prismjs/components/prism-jsx.min\"\nclass Collaspe extends React.Component {\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <BreadCrumbs\n          breadCrumbTitle=\"Collapse\"\n          breadCrumbParent=\"Components\"\n          breadCrumbActive=\"Collapse\"\n        />\n        <Row>\n          <Col xl=\"6\" lg=\"12\">\n            <CollapseDefault />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <CollapseUncontrolled />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <Accordion />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AccordionShadow />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AccordionBorder />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AccordionMargin />\n          </Col>\n        </Row>\n        <AccordionHover />\n      </React.Fragment>\n    )\n  }\n}\nexport default Collaspe\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","!function(t){var n=t.util.clone(t.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function a(t,n){return t=t.replace(/<S>/g,(function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"})).replace(/<BRACES>/g,(function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"})).replace(/<SPREAD>/g,(function(){return e})),RegExp(t,n)}e=a(e).source,t.languages.jsx=t.languages.extend(\"markup\",n),t.languages.jsx.tag.pattern=a(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),t.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/,t.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/,t.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,t.languages.jsx.tag.inside.comment=n.comment,t.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:a(\"<SPREAD>\"),inside:t.languages.jsx}},t.languages.jsx.tag),t.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:a(\"=<BRACES>\"),alias:\"language-javascript\",inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:t.languages.jsx}}},t.languages.jsx.tag);var s=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(s).join(\"\"):\"\"},g=function(n){for(var e=[],a=0;a<n.length;a++){var o=n[a],i=!1;if(\"string\"!=typeof o&&(\"tag\"===o.type&&o.content[0]&&\"tag\"===o.content[0].type?\"</\"===o.content[0].content[0].content?e.length>0&&e[e.length-1].tagName===s(o.content[0].content[1])&&e.pop():\"/>\"===o.content[o.content.length-1].content||e.push({tagName:s(o.content[0].content[1]),openedBraces:0}):e.length>0&&\"punctuation\"===o.type&&\"{\"===o.content?e[e.length-1].openedBraces++:e.length>0&&e[e.length-1].openedBraces>0&&\"punctuation\"===o.type&&\"}\"===o.content?e[e.length-1].openedBraces--:i=!0),(i||\"string\"==typeof o)&&e.length>0&&0===e[e.length-1].openedBraces){var r=s(o);a<n.length-1&&(\"string\"==typeof n[a+1]||\"plain-text\"===n[a+1].type)&&(r+=s(n[a+1]),n.splice(a+1,1)),a>0&&(\"string\"==typeof n[a-1]||\"plain-text\"===n[a-1].type)&&(r=s(n[a-1])+r,n.splice(a-1,1),a--),n[a]=new t.Token(\"plain-text\",r,null,r)}o.content&&\"string\"!=typeof o.content&&g(o.content)}};t.hooks.add(\"after-tokenize\",(function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||g(t.tokens)}))}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabId\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"];\n\nvar _transitionStatusToCl;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread(_objectSpread({}, Transition.propTypes), {}, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread(_objectSpread({}, Transition.defaultProps), {}, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return /*#__PURE__*/React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread(_objectSpread({}, childProps.style), style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Collapse from './Collapse';\nimport { omit, findDOMElements, defaultToggleEvents, addMultipleEventListeners } from './utils';\nvar omitKeys = ['toggleEvents', 'defaultOpen'];\nvar propTypes = {\n  defaultOpen: PropTypes.bool,\n  toggler: PropTypes.string.isRequired,\n  toggleEvents: PropTypes.arrayOf(PropTypes.string)\n};\nvar defaultProps = {\n  toggleEvents: defaultToggleEvents\n};\n\nvar UncontrolledCollapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledCollapse, _Component);\n\n  function UncontrolledCollapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.togglers = null;\n    _this.removeEventListeners = null;\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    return _this;\n  }\n\n  var _proto = UncontrolledCollapse.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.togglers = findDOMElements(this.props.toggler);\n\n    if (this.togglers.length) {\n      this.removeEventListeners = addMultipleEventListeners(this.togglers, this.toggle, this.props.toggleEvents);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.togglers.length && this.removeEventListeners) {\n      this.removeEventListeners();\n    }\n  };\n\n  _proto.toggle = function toggle(e) {\n    this.setState(function (_ref) {\n      var isOpen = _ref.isOpen;\n      return {\n        isOpen: !isOpen\n      };\n    });\n    e.preventDefault();\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      isOpen: this.state.isOpen\n    }, omit(this.props, omitKeys)));\n  };\n\n  return UncontrolledCollapse;\n}(Component);\n\nUncontrolledCollapse.propTypes = propTypes;\nUncontrolledCollapse.defaultProps = defaultProps;\nexport default UncontrolledCollapse;"],"sourceRoot":""}