{"version":3,"sources":["views/pages/Payment/PaymentPending.jsx"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","PaymentPending","_useState","useState","loading","total","_useState2","_slicedToArray","pageData","setpageData","_useState3","_useState4","due","setTotal","location","useLocation","queryParams","URLSearchParams","search","user","get","id","console","log","us","ID","getData","_ref","_asyncToGenerator","_callee","res","_context","axios","concat","status","data","_objectSpread","apply","arguments","useEffect","React","createElement","Fragment","style","flexDirection","className","onClick","window","print","src","userImg","alt","profile","project","building","unit","dataArray","map","j","amount"],"mappings":"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","file":"static/js/172.92e0dfa6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport userImg from '../../../layouts/components/utils/logo.jpeg';\r\nconst PaymentPending = () => {\r\n    const [pageData, setpageData] = useState({\r\n        loading: true, total: []\r\n    });\r\n    const [due, setTotal] = useState(null);\r\n    const handlePrint = () => {\r\n\r\n        window.print();\r\n    };\r\n    const location = useLocation();\r\n\r\n    // Parse the query parameters from the location object\r\n    const queryParams = new URLSearchParams(location.search);\r\n\r\n    // Get the values of 'user' and 'id' parameters\r\n    const user = queryParams.get('unit');\r\n    const id = queryParams.get('building');\r\n    console.log({ us: user, ID: id });\r\n    const getData = async () => {\r\n        const res = await axios.get(`https://growbuild-jg.onrender.com/api/get/all/payment/due/${id}/${user}`);\r\n        if (res.status === 200) {\r\n            setTotal(res.data);\r\n            console.log(res.data);\r\n        }\r\n        setpageData({ ...pageData, loading: false });\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    if (!pageData.loading && due != null) {\r\n        return (\r\n          <>\r\n            <div className=\"container my-3 px-3 py-3 shadow\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={handlePrint}\r\n                    className=\"btn btn-primary btn-md my-2 float-end\"\r\n                  >\r\n                    Print Now\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <img src={userImg} alt=\"logo\" className=\"img-fluid \" />\r\n                  <h3 className='text-end'>Project - {due.profile.project}</h3>\r\n                  <h3 className='text-end'>Building - {due.profile.building}</h3>\r\n                  <h3 className='text-end'>Unit - {due.profile.unit}</h3>\r\n                  <hr />\r\n                </div>\r\n              </div>\r\n              <div id=\"print-content\" className=\"p-3 bg-white my-3 shadow\">\r\n                <table className=\"table table-hover mt-3\">\r\n                  <thead className=\"table-dark\">\r\n                    <tr>\r\n                      <th>SNo.</th>\r\n                      <th>Name</th>\r\n                      <th>Unit</th>\r\n                      <th>Building</th>\r\n                      <th>Amount Rate (%)</th>\r\n                      <th>total Rate (%)</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {due.dataArray.map((i, j) => (\r\n                      <tr>\r\n                        <td>{j + 1}</td>\r\n                        <td>{i.name}</td>\r\n                        <td>{due.profile.unit}</td>\r\n                        <td>{due.profile.building}</td>\r\n                        <td>{i.amount}</td>\r\n                        <td>{due.total}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n    }\r\n    else if (!pageData.loading && due !== null) {\r\n        return (\r\n            <>\r\n                <div style={{ flexDirection: 'column' }} className='d-flex flex-col align-items-start justify-content-start'>\r\n                    <h1>No Data Found</h1>\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n                <div style={{ flexDirection: 'column' }} className='d-flex flex-col align-items-start justify-content-start'>\r\n\r\n                    <h1>Loading...</h1>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaymentPending"],"sourceRoot":""}